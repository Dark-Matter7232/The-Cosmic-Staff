/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2020 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef FIMC_IS_GC607_COMPANION_SET_A_H
#define FIMC_IS_GC607_COMPANION_SET_A_H

#include "fimc-is-companion-gc607.h"

/*
 * [Mode Information]
 *
 * Reference File : GC607_Setting_For_GM2_Different_Modes_BetaV0.3_new.xlsx
 * Update Data    : 2020-09-11
 * Author         : chandra.mv
 *
 * - Remosaic Full For Single Still Remosaic Capture -
 *    [  0 ] FULL : Remosaic Full 8000x6000 10fps       : Single Still Remosaic Capture (4:3)
 *
 * - 2x2 BIN For Still Preview / Capture -
 *    [  1 ] 2SUM2BIN : 2 Binning Full 4000x3000 30fps    : Single Still Preview/Capture (4:3)
 *    [  2 ] 2SUM2BIN : 2 Binning Crop 4000X2256 30fps    : Single Still Preview/Capture (16:9)
 *    [  3 ] 2SUM2BIN : 2 Binning Crop 4000X1844 30fps    : Single Still Preview/Capture (19.5:9)
 *    [  4 ] 2SUM2BIN : 2 Binning Crop 3680X3000 30fps    : MMS (11:9)
 *    [  5 ] 2SUM2BIN : 2 Binning Crop 2976X2976 30fps    : Single Still Preview/Capture (1:1)
 *    [  6 ] 4SUM4BIN : 4 Binning Full 2000X1500 94fps    : Fast-AE (2000x1500@94fps)
 *    [  7 ] 4SUM4BIN : 4 Binning Crop 2000X1128 120fps   : SlowMotion (1280x720@120fps)
 *    [  8 ] 4SUM4BIN : 4 Binning Crop 1920X1080 240fps   : SlowMotion (1280x720@240fps)
 *
 */

const u32 sensor_gc607_companion_setfile_A_Global[] = {
	0x1001, 0x81, 0x01,
	0x1003, 0xa1, 0x01,
	0x1005, 0xa1, 0x01,
	0x102a, 0xf0, 0x01,
	0x102b, 0x09, 0x01,
	0x102c, 0x01, 0x01,
	0x1026, 0x28, 0x01,
	0x1027, 0x01, 0x01,
	0x1028, 0x28, 0x01,
	0x1029, 0x01, 0x01,
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x4f, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x2f, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x1b, 0x01,
	0x1005, 0x21, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x3f, 0x01,
	0x1010, 0xff, 0x01,
	0x2000, 0x01, 0x01,
	0x2001, 0x03, 0x01,
	0x2002, 0x24, 0x01,
	0x2003, 0x00, 0x01,
	0x2004, 0x44, 0x01,
	0x2005, 0xcc, 0x01,
	0x2006, 0xcc, 0x01,
	0x2007, 0x8b, 0x01,
	0x2008, 0x1a, 0x01,
	0x2009, 0x00, 0x01,
	0x200a, 0x00, 0x01,
	0x200b, 0x03, 0x01,
	0x2011, 0xf4, 0x01,
	0x2012, 0x20, 0x01,
	0x2013, 0x20, 0x01,
	0x2014, 0x20, 0x01,
	0x2015, 0x20, 0x01,
	0x2045, 0x01, 0x01,
	0x2049, 0x00, 0x01,
	0x203c, 0x07, 0x01,
	0x2038, 0x0d, 0x01,
	0x2032, 0x00, 0x01,
	0x2033, 0x05, 0x01,
	0x2034, 0x00, 0x01,
	0x2035, 0x05, 0x01,
	0x2041, 0x00, 0x01,
	0x2042, 0x05, 0x01,
	0x2043, 0x02, 0x01,
	0x204b, 0x00, 0x01,
	0x204c, 0x00, 0x01,
	0x204d, 0x6b, 0x01,
	0x204e, 0x00, 0x01,
	0x204f, 0x05, 0x01,
	0x2071, 0x23, 0x01,
	0x2072, 0x88, 0x01,
	0x3001, 0x55, 0x01,
	0x3002, 0x55, 0x01,
	0x3003, 0xf0, 0x01,
	0x3004, 0x75, 0x01,
	0x3005, 0x07, 0x01,
	0x3006, 0x7c, 0x01,
	0x3007, 0x00, 0x01,
	0x3008, 0x01, 0x01,
	0x300b, 0x00, 0x01,
	0x3016, 0xd0, 0x01,
	0x3011, 0x00, 0x01,
	0x3012, 0x05, 0x01,
	0x3013, 0x00, 0x01,
	0x3014, 0x88, 0x01,
	0x3018, 0x27, 0x01,
	0x3019, 0x10, 0x01,
	0x3020, 0x0e, 0x01,
	0x3021, 0x0e, 0x01,
	0x3022, 0x40, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x2c, 0x01,
	0x3025, 0x10, 0x01,
	0x3026, 0x1c, 0x01,
	0x3027, 0xff, 0x01,
	0x302d, 0x0e, 0x01,
	0x3030, 0x1c, 0x01,
	0x3031, 0x12, 0x01,
	0x3047, 0x01, 0x01,
	0x304a, 0x27, 0x01,
	0x304b, 0x10, 0x01,
	0x304f, 0x30, 0x01,
	0x3050, 0x02, 0x01,
	0x3051, 0x71, 0x01,
	0x3052, 0x00, 0x01,
	0x3055, 0x00, 0x01,
	0x3056, 0x88, 0x01,
	0x302b, 0x0f, 0x01,
	0x302c, 0xa0, 0x01,
	0x3028, 0x01, 0x01,
	0x3029, 0xf4, 0x01,
	0x0002, 0x7f, 0x01,
	0x0003, 0x0b, 0x01,
	0x000a, 0x04, 0x01,
	0x000b, 0xff, 0x01,
	0x000c, 0x00, 0x01,
	0x000d, 0x00, 0x01,
	0x000e, 0x00, 0x01,
	0x000f, 0x00, 0x01,
	0x0010, 0x1f, 0x01,
	0x0011, 0x40, 0x01,
	0x0012, 0x17, 0x01,
	0x0013, 0x70, 0x01,
	0x0014, 0x00, 0x01,
	0x0015, 0x00, 0x01,
	0x0016, 0x00, 0x01,
	0x0017, 0x00, 0x01,
	0x0018, 0x1f, 0x01,
	0x0019, 0x40, 0x01,
	0x001a, 0x17, 0x01,
	0x001b, 0x70, 0x01,
	0x001c, 0x40, 0x01,
	0x001d, 0x3f, 0x01,
	0x001e, 0x3f, 0x01,
	0x001f, 0x40, 0x01,
	0x0020, 0x75, 0x01,
	0x0021, 0x40, 0x01,
	0x0022, 0x5c, 0x01,
	0x0023, 0x40, 0x01,
	0x0024, 0x01, 0x01,
	0x0025, 0x00, 0x01,
	0x0026, 0x01, 0x01,
	0x0080, 0x02, 0x01,
	0x0200, 0x08, 0x01,
	0x0201, 0x06, 0x01,
	0x0202, 0x02, 0x01,
	0x0203, 0x98, 0x01,
	0x0204, 0x02, 0x01,
	0x0205, 0xec, 0x01,
	0x0206, 0x02, 0x01,
	0x0207, 0xa8, 0x01,
	0x0208, 0x02, 0x01,
	0x0209, 0xf4, 0x01,
	0x020a, 0x00, 0x01,
	0x020b, 0x62, 0x01,
	0x020c, 0x00, 0x01,
	0x020d, 0x57, 0x01,
	0x020e, 0x00, 0x01,
	0x020f, 0x60, 0x01,
	0x0210, 0x00, 0x01,
	0x0211, 0x56, 0x01,
	0x02b7, 0x01, 0x01,
	0x0293, 0x0e, 0x01,
	0x0294, 0x74, 0x01,
	0x0295, 0x00, 0x01,
	0x0296, 0x53, 0x01,
	0x0297, 0x02, 0x01,
	0x0298, 0xee, 0x01,
	0x0299, 0x03, 0x01,
	0x029a, 0x15, 0x01,
	0x029b, 0x00, 0x01,
	0x029c, 0xae, 0x01,
	0x02a5, 0x03, 0x01,
	0x02a6, 0xff, 0x01,
	0x02a7, 0x00, 0x01,
	0x02a8, 0x10, 0x01,
	0x02a9, 0x03, 0x01,
	0x02aa, 0xff, 0x01,
	0x02ab, 0x00, 0x01,
	0x02ac, 0x10, 0x01,
	0x02ad, 0x03, 0x01,
	0x02ae, 0xff, 0x01,
	0x02af, 0x00, 0x01,
	0x02b0, 0x10, 0x01,
	0x02b1, 0x03, 0x01,
	0x02b2, 0xff, 0x01,
	0x02b3, 0x15, 0x01,
	0x02b4, 0x65, 0x01,
	0x02b5, 0x78, 0x01,
	0x02b6, 0x07, 0x01,
	0x02b8, 0x04, 0x01,
	0x02b9, 0x0c, 0x01,
	0x02ba, 0x18, 0x01,
	0x02bb, 0x24, 0x01,
	0x02bc, 0x30, 0x01,
	0x02bd, 0x3C, 0x01,
	0x02be, 0x48, 0x01,
	0x02bf, 0x00, 0x01,
	0x02c0, 0x54, 0x01,
	0x02c1, 0x00, 0x01,
	0x02c2, 0xa8, 0x01,
	0x02c3, 0x00, 0x01,
	0x02c4, 0xfc, 0x01,
	0x0218, 0x3d, 0x01,
	0x0219, 0x51, 0x01,
	0x021a, 0xf7, 0x01,
	0x021b, 0x28, 0x01,
	0x021c, 0x40, 0x01,
	0x021d, 0xa6, 0x01,
	0x0300, 0x40, 0x01,
	0x0301, 0x00, 0x01,
	0x0302, 0x00, 0x01,
	0x0303, 0x00, 0x01,
	0x0304, 0x00, 0x01,
	0x0305, 0x00, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x00, 0x01,
	0x0308, 0x00, 0x01,
	0x0309, 0x00, 0x01,
	0x030a, 0x00, 0x01,
	0x030b, 0x00, 0x01,
	0x030c, 0x04, 0x01,
	0x030d, 0x00, 0x01,
	0x030e, 0x00, 0x01,
	0x030f, 0x00, 0x01,
	0x0310, 0x00, 0x01,
	0x0311, 0x04, 0x01,
	0x0312, 0x00, 0x01,
	0x0313, 0x00, 0x01,
	0x0314, 0x00, 0x01,
	0x0315, 0x00, 0x01,
	0x0316, 0x00, 0x01,
	0x0317, 0x00, 0x01,
	0x0318, 0x00, 0x01,
	0x0319, 0x00, 0x01,
	0x031a, 0x00, 0x01,
	0x031b, 0x00, 0x01,
	0x031c, 0x00, 0x01,
	0x031d, 0x40, 0x01,
	0x031e, 0x00, 0x01,
	0x031f, 0x00, 0x01,
	0x0320, 0x20, 0x01,
	0x0321, 0x00, 0x01,
	0x0322, 0x00, 0x01,
	0x0323, 0x00, 0x01,
	0x0324, 0x00, 0x01,
	0x0325, 0x00, 0x01,
	0x0326, 0x00, 0x01,
	0x0327, 0x00, 0x01,
	0x0328, 0x00, 0x01,
	0x0329, 0x00, 0x01,
	0x032a, 0x00, 0x01,
	0x032b, 0x00, 0x01,
	0x032c, 0x02, 0x01,
	0x032d, 0x00, 0x01,
	0x032e, 0x00, 0x01,
	0x032f, 0x00, 0x01,
	0x0330, 0x00, 0x01,
	0x0331, 0x02, 0x01,
	0x0332, 0x00, 0x01,
	0x0333, 0x00, 0x01,
	0x0334, 0x00, 0x01,
	0x0335, 0x00, 0x01,
	0x0336, 0x00, 0x01,
	0x0337, 0x00, 0x01,
	0x0338, 0x00, 0x01,
	0x0339, 0x00, 0x01,
	0x033a, 0x00, 0x01,
	0x033b, 0x00, 0x01,
	0x033c, 0x00, 0x01,
	0x033d, 0x20, 0x01,
	0x033e, 0x00, 0x01,
	0x033f, 0x00, 0x01,
	0x0406, 0x40, 0x01,
	0x0407, 0x80, 0x01,
	0x040a, 0x40, 0x01,
	0x040b, 0x80, 0x01,
	0x0416, 0x30, 0x01,
	0x0417, 0x80, 0x01,
	0x041a, 0x30, 0x01,
	0x041b, 0x80, 0x01,
	0x0426, 0x30, 0x01,
	0x0427, 0x64, 0x01,
	0x042a, 0x30, 0x01,
	0x042b, 0x64, 0x01,
	0x0436, 0x30, 0x01,
	0x0437, 0x64, 0x01,
	0x043a, 0x30, 0x01,
	0x043b, 0x64, 0x01,
	0x0508, 0x04, 0x01,
	0x0509, 0x04, 0x01,
	0x050a, 0x04, 0x01,
	0x050b, 0x04, 0x01,
	0x050c, 0x02, 0x01,
	0x050d, 0x01, 0x01,
	0x050e, 0x00, 0x01,
	0x050f, 0x00, 0x01,
	0x051a, 0x00, 0x01,
	0x2010, 0x01, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_REMOSAIC_FULL_8000x6000_10FPS[] = {
	0x1010,  0xdf, 0x01,
	0x1010,  0xc7, 0x01,
	0x1011,  0x00, 0x01,
	0x1000,  0x4f, 0x01,
	0x1001,  0x81, 0x01,
	0x1001,  0x01, 0x01,
	0x1002,  0x2c, 0x01,
	0x1003,  0xa1, 0x01,
	0x1003,  0x21, 0x01,
	0x1004,  0x7d, 0x01,
	0x1005,  0xa5, 0x01,
	0x1005,  0x25, 0x01,
	0xfff0,  0x06, 0x01,
	0xfff0,  0x06, 0x01,
	0x1011,  0x3f, 0x01,
	0x1010,  0xff, 0x01,
	0x2002,  0x24, 0x01,
	0x2012,  0x20, 0x01,
	0x2013,  0x20, 0x01,
	0x2014,  0x20, 0x01,
	0x2015,  0x20, 0x01,
	0x2049,  0x00, 0x01,
	0x203c,  0x07, 0x01,
	0x2035,  0x05, 0x01,
	0x2042,  0x05, 0x01,
	0x3005,  0x07, 0x01,
	0x300b,  0x00, 0x01,
	0x3014,  0x88, 0x01,
	0x3018,  0x27, 0x01,
	0x3019,  0x10, 0x01,
	0x3020,  0x0e, 0x01,
	0x3021,  0x0e, 0x01,
	0x3022,  0x40, 0x01,
	0x3023,  0x06, 0x01,
	0x3024,  0x2c, 0x01,
	0x3025,  0x10, 0x01,
	0x3026,  0x1c, 0x01,
	0x3027,  0xff, 0x01,
	0x302d,  0x0e, 0x01,
	0x3030,  0x1c, 0x01,
	0x3031,  0x12, 0x01,
	0x304a,  0x27, 0x01,
	0x304b,  0x10, 0x01,
	0x3056,  0x88, 0x01,
	0x302b,  0x0f, 0x01,
	0x302c,  0xa0, 0x01,
	0x3028,  0x02, 0x01,
	0x3029,  0x52, 0x01,
	0x0002,  0x7f, 0x01,
	0x0003,  0x0b, 0x01,
	0x000a,  0x04, 0x01,
	0x000b,  0xff, 0x01,
	0x000f,  0x00, 0x01,
	0x0010,  0x1f, 0x01,
	0x0011,  0x40, 0x01,
	0x0012,  0x17, 0x01,
	0x0013,  0x70, 0x01,
	0x0018,  0x1f, 0x01,
	0x0019,  0x40, 0x01,
	0x001a,  0x17, 0x01,
	0x001b,  0x70, 0x01,
	0x0212,  0x00, 0x01,
	0x0213,  0x00, 0x01,
	0x0214,  0x00, 0x01,
	0x0215,  0x00, 0x01,
	0x0216,  0x00, 0x01,
	0x029d,  0x00, 0x01,
	0x029e,  0x00, 0x01,
	0x029f,  0x00, 0x01,
	0x02a0,  0x00, 0x01,
	0x02a1,  0x00, 0x01,
	0x02a2,  0x00, 0x01,
	0x02a3,  0x00, 0x01,
	0x02a4,  0x00, 0x01,
	0x0346,  0x00, 0x01,
	0x0347,  0x01, 0x01,
	0x0348,  0x00, 0x01,
	0x0349,  0x01, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_2X2BIN_FULL_4000x3000_30FPS[] = {
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x38, 0x01,
	0x1001, 0x81, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x1f, 0x01,
	0x1003, 0xa1, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x70, 0x01,
	0x1005, 0xa5, 0x01,
	0x1005, 0x25, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x1e, 0x01,
	0x1010, 0xff, 0x01,
	0x2002, 0x48, 0x01,
	0x2012, 0x10, 0x01,
	0x2013, 0x10, 0x01,
	0x2014, 0x10, 0x01,
	0x2015, 0x10, 0x01,
	0x2049, 0x01, 0x01,
	0x203c, 0x06, 0x01,
	0x2033, 0x05, 0x01,
	0x2042, 0x05, 0x01,
	0x204f, 0x05, 0x01,
	0x3005, 0x05, 0x01,
	0x300b, 0x01, 0x01,
	0x3012, 0x05, 0x01,
	0x3014, 0x06, 0x01,
	0x3018, 0x13, 0x01,
	0x3019, 0x88, 0x01,
	0x3020, 0x0a, 0x01,
	0x3021, 0x0a, 0x01,
	0x3022, 0x30, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x20, 0x01,
	0x3025, 0x0c, 0x01,
	0x3026, 0x12, 0x01,
	0x3027, 0xb4, 0x01,
	0x302d, 0x0a, 0x01,
	0x3030, 0x10, 0x01,
	0x3031, 0x0c, 0x01,
	0x304a, 0x13, 0x01,
	0x304b, 0x88, 0x01,
	0x3050, 0x02, 0x01,
	0x3051, 0x71, 0x01,
	0x3056, 0x05, 0x01,
	0x0002, 0x00, 0x01,
	0x0003, 0x00, 0x01,
	0x000b, 0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_2X2BIN_CROP_4000x2256_30FPS[] = {
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x34, 0x01,
	0x1001, 0x81, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x1c, 0x01,
	0x1003, 0xa1, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x68, 0x01,
	0x1005, 0xa5, 0x01,
	0x1005, 0x25, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x1e, 0x01,
	0x1010, 0xff, 0x01,
	0x2002, 0x48, 0x01,
	0x2012, 0x10, 0x01,
	0x2013, 0x10, 0x01,
	0x2014, 0x10, 0x01,
	0x2015, 0x10, 0x01,
	0x2049, 0x01, 0x01,
	0x203c, 0x06, 0x01,
	0x2033, 0x05, 0x01,
	0x2042, 0x05, 0x01,
	0x204f, 0x05, 0x01,
	0x3005, 0x05, 0x01,
	0x300b, 0x01, 0x01,
	0x3012, 0x05, 0x01,
	0x3014, 0x06, 0x01,
	0x3018, 0x13, 0x01,
	0x3019, 0x88, 0x01,
	0x3020, 0x0a, 0x01,
	0x3021, 0x08, 0x01,
	0x3022, 0x30, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x26, 0x01,
	0x3025, 0x0c, 0x01,
	0x3026, 0x12, 0x01,
	0x3027, 0xb0, 0x01,
	0x302d, 0x08, 0x01,
	0x3030, 0x12, 0x01,
	0x3031, 0x0b, 0x01,
	0x304a, 0x13, 0x01,
	0x304b, 0x88, 0x01,
	0x3050, 0x02, 0x01,
	0x3051, 0x71, 0x01,
	0x3056, 0x05, 0x01,
	0x0002, 0x00, 0x01,
	0x0003, 0x00, 0x01,
	0x000b, 0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_2X2BIN_CROP_4000x1844_30FPS[] = {
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x34, 0x01,
	0x1001, 0x81, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x1c, 0x01,
	0x1003, 0xa1, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x68, 0x01,
	0x1005, 0xa5, 0x01,
	0x1005, 0x25, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x1e, 0x01,
	0x1010, 0xff, 0x01,
	0x2002, 0x48, 0x01,
	0x2012, 0x10, 0x01,
	0x2013, 0x10, 0x01,
	0x2014, 0x10, 0x01,
	0x2015, 0x10, 0x01,
	0x2049, 0x01, 0x01,
	0x203c, 0x06, 0x01,
	0x2033, 0x05, 0x01,
	0x2042, 0x05, 0x01,
	0x204f, 0x05, 0x01,
	0x3005, 0x05, 0x01,
	0x300b, 0x01, 0x01,
	0x3012, 0x05, 0x01,
	0x3014, 0x06, 0x01,
	0x3018, 0x13, 0x01,
	0x3019, 0x88, 0x01,
	0x3020, 0x0a, 0x01,
	0x3021, 0x08, 0x01,
	0x3022, 0x30, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x26, 0x01,
	0x3025, 0x0c, 0x01,
	0x3026, 0x12, 0x01,
	0x3027, 0xb0, 0x01,
	0x302d, 0x08, 0x01,
	0x3030, 0x12, 0x01,
	0x3031, 0x0b, 0x01,
	0x304a, 0x13, 0x01,
	0x304b, 0x88, 0x01,
	0x3050, 0x02, 0x01,
	0x3051, 0x71, 0x01,
	0x3056, 0x05, 0x01,
	0x0002, 0x00, 0x01,
	0x0003, 0x00, 0x01,
	0x000b, 0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_2X2BIN_CROP_3680x3000_30FPS[] = {
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x34, 0x01,
	0x1001, 0x81, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x1c, 0x01,
	0x1003, 0xa1, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x68, 0x01,
	0x1005, 0xa5, 0x01,
	0x1005, 0x25, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x1e, 0x01,
	0x1010, 0xff, 0x01,
	0x2002, 0x48, 0x01,
	0x2012, 0x10, 0x01,
	0x2013, 0x10, 0x01,
	0x2014, 0x10, 0x01,
	0x2015, 0x10, 0x01,
	0x2049, 0x01, 0x01,
	0x203c, 0x06, 0x01,
	0x2033, 0x05, 0x01,
	0x2042, 0x05, 0x01,
	0x204f, 0x05, 0x01,
	0x3005, 0x05, 0x01,
	0x300b, 0x01, 0x01,
	0x3012, 0x10, 0x01,
	0x3014, 0x05, 0x01,
	0x3018, 0x11, 0x01,
	0x3019, 0xf8, 0x01,
	0x3020, 0x0a, 0x01,
	0x3021, 0x08, 0x01,
	0x3022, 0x30, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x26, 0x01,
	0x3025, 0x0c, 0x01,
	0x3026, 0x12, 0x01,
	0x3027, 0xb0, 0x01,
	0x302d, 0x08, 0x01,
	0x3030, 0x12, 0x01,
	0x3031, 0x0b, 0x01,
	0x304a, 0x11, 0x01,
	0x304b, 0xf8, 0x01,
	0x3050, 0x02, 0x01,
	0x3051, 0x3f, 0x01,
	0x3056, 0x05, 0x01,
	0x0002, 0x00, 0x01,
	0x0003, 0x00, 0x01,
	0x000b, 0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_2X2BIN_CROP_3000x3000_30FPS[] = {
	0x1010,  0xdf, 0x01,
	0x1010,  0xc7, 0x01,
	0x1011,  0x00, 0x01,
	0x1000,  0x34, 0x01,
	0x1001,  0x81, 0x01,
	0x1001,  0x01, 0x01,
	0x1002,  0x1c, 0x01,
	0x1003,  0xa1, 0x01,
	0x1003,  0x21, 0x01,
	0x1004,  0x68, 0x01,
	0x1005,  0xa5, 0x01,
	0x1005,  0x25, 0x01,
	0xfff0,  0x06, 0x01,
	0xfff0,  0x06, 0x01,
	0x1011,  0x1e, 0x01,
	0x1010,  0xff, 0x01,
	0x2002,  0x48, 0x01,
	0x2012,  0x10, 0x01,
	0x2013,  0x10, 0x01,
	0x2014,  0x10, 0x01,
	0x2015,  0x10, 0x01,
	0x2049,  0x01, 0x01,
	0x203c,  0x06, 0x01,
	0x2033,  0x05, 0x01,
	0x2042,  0x05, 0x01,
	0x204f,  0x05, 0x01,
	0x3005,  0x05, 0x01,
	0x300b,  0x01, 0x01,
	0x3012,  0x10, 0x01,
	0x3014,  0x05, 0x01,
	0x3018,  0x0e, 0x01,
	0x3019,  0xa6, 0x01,
	0x3020,  0x0a, 0x01,
	0x3021,  0x08, 0x01,
	0x3022,  0x30, 0x01,
	0x3023,  0x06, 0x01,
	0x3024,  0x26, 0x01,
	0x3025,  0x0c, 0x01,
	0x3026,  0x12, 0x01,
	0x3027,  0xb0, 0x01,
	0x302d,  0x08, 0x01,
	0x3030,  0x12, 0x01,
	0x3031,  0x0b, 0x01,
	0x304a,  0x0e, 0x01,
	0x304b,  0xa6, 0x01,
	0x3050,  0x01, 0x01,
	0x3051,  0xd6, 0x01,
	0x3056,  0x05, 0x01,
	0x0002,  0x00, 0x01,
	0x0003,  0x00, 0x01,
	0x000b,  0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_4X4BIN_FULL_2000x1500_94FPS[] = {
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x38, 0x01,
	0x1001, 0x81, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x1f, 0x01,
	0x1003, 0xa1, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x70, 0x01,
	0x1005, 0xa5, 0x01,
	0x1005, 0x25, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x1e, 0x01,
	0x1010, 0xff, 0x01,
	0x2002, 0x48, 0x01,
	0x2012, 0x10, 0x01,
	0x2013, 0x10, 0x01,
	0x2014, 0x10, 0x01,
	0x2015, 0x10, 0x01,
	0x2049, 0x00, 0x01,
	0x203c, 0x06, 0x01,
	0x2033, 0x05, 0x01,
	0x2042, 0x05, 0x01,
	0x3005, 0x05, 0x01,
	0x300b, 0x01, 0x01,
	0x3014, 0x05, 0x01,
	0x3018, 0x09, 0x01,
	0x3019, 0xc4, 0x01,
	0x3020, 0x0a, 0x01,
	0x3021, 0x0a, 0x01,
	0x3022, 0x30, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x20, 0x01,
	0x3025, 0x0c, 0x01,
	0x3026, 0x12, 0x01,
	0x3027, 0xb4, 0x01,
	0x302d, 0x0a, 0x01,
	0x3030, 0x10, 0x01,
	0x3031, 0x0c, 0x01,
	0x304a, 0x09, 0x01,
	0x304b, 0xc4, 0x01,
	0x3056, 0x05, 0x01,
	0x0002, 0x00, 0x01,
	0x0003, 0x00, 0x01,
	0x000b, 0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_4X4BIN_CROP_2000x1128_120FPS[] = {
	0x1010, 0xdf, 0x01,
	0x1010, 0xc7, 0x01,
	0x1011, 0x00, 0x01,
	0x1000, 0x34, 0x01,
	0x1001, 0x81, 0x01,
	0x1001, 0x01, 0x01,
	0x1002, 0x1c, 0x01,
	0x1003, 0xa1, 0x01,
	0x1003, 0x21, 0x01,
	0x1004, 0x68, 0x01,
	0x1005, 0xa5, 0x01,
	0x1005, 0x25, 0x01,
	0xfff0, 0x06, 0x01,
	0xfff0, 0x06, 0x01,
	0x1011, 0x1e, 0x01,
	0x1010, 0xff, 0x01,
	0x2002, 0x48, 0x01,
	0x2012, 0x10, 0x01,
	0x2013, 0x10, 0x01,
	0x2014, 0x10, 0x01,
	0x2015, 0x10, 0x01,
	0x2049, 0x00, 0x01,
	0x203c, 0x06, 0x01,
	0x2033, 0x05, 0x01,
	0x2042, 0x05, 0x01,
	0x3005, 0x05, 0x01,
	0x300b, 0x01, 0x01,
	0x3014, 0x06, 0x01,
	0x3018, 0x09, 0x01,
	0x3019, 0xc4, 0x01,
	0x3020, 0x0a, 0x01,
	0x3021, 0x08, 0x01,
	0x3022, 0x30, 0x01,
	0x3023, 0x06, 0x01,
	0x3024, 0x26, 0x01,
	0x3025, 0x0c, 0x01,
	0x3026, 0x12, 0x01,
	0x3027, 0xb0, 0x01,
	0x302d, 0x08, 0x01,
	0x3030, 0x12, 0x01,
	0x3031, 0x0b, 0x01,
	0x304a, 0x09, 0x01,
	0x304b, 0xc4, 0x01,
	0x3056, 0x05, 0x01,
	0x0002, 0x00, 0x01,
	0x0003, 0x00, 0x01,
	0x000b, 0x00, 0x01,
};

const u32 sensor_gc607_companion_setfile_A_4X4BIN_CROP_1920x1080_240FPS[] = {
	0x1010,  0xdf, 0x01,
	0x1010,  0xc7, 0x01,
	0x1011,  0x00, 0x01,
	0x1000,  0x4f, 0x01,
	0x1001,  0x81, 0x01,
	0x1001,  0x01, 0x01,
	0x1002,  0x2c, 0x01,
	0x1003,  0xa1, 0x01,
	0x1003,  0x21, 0x01,
	0x1004,  0x7d, 0x01,
	0x1005,  0xa5, 0x01,
	0x1005,  0x25, 0x01,
	0xfff0,  0x06, 0x01,
	0xfff0,  0x06, 0x01,
	0x1011,  0x1e, 0x01,
	0x1010,  0xff, 0x01,
	0x2002,  0x24, 0x01,
	0x2012,  0x20, 0x01,
	0x2013,  0x20, 0x01,
	0x2014,  0x20, 0x01,
	0x2015,  0x20, 0x01,
	0x2049,  0x00, 0x01,
	0x203c,  0x06, 0x01,
	0x2033,  0x05, 0x01,
	0x2042,  0x05, 0x01,
	0x3005,  0x07, 0x01,
	0x300b,  0x01, 0x01,
	0x3014,  0x20, 0x01,
	0x3018,  0x09, 0x01,
	0x3019,  0x60, 0x01,
	0x3020,  0x0e, 0x01,
	0x3021,  0x0e, 0x01,
	0x3022,  0x40, 0x01,
	0x3023,  0x06, 0x01,
	0x3024,  0x2c, 0x01,
	0x3025,  0x10, 0x01,
	0x3026,  0x1c, 0x01,
	0x3027,  0xff, 0x01,
	0x302d,  0x0e, 0x01,
	0x3030,  0x1c, 0x01,
	0x3031,  0x12, 0x01,
	0x304a,  0x09, 0x01,
	0x304b,  0x60, 0x01,
	0x3056,  0x20, 0x01,
	0x0002,  0x00, 0x01,
	0x0003,  0x00, 0x01,
	0x000b,  0x00, 0x01,
};

#if 0
const struct sensor_pll_info_compact sensor_gc607_companion_pllinfo_A_REMOSAIC_FULL_10FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2054000000,                  /* mipi_datarate = OPSYCK */
	641330000,                   /* pclk = VTPXCK of Clock Information */
	6115,                        /* frame_length_lines : V-Size */
	10240,                       /* line_length_pck : H-Size */
};

const struct sensor_pll_info_compact sensor_gc607_companion_pllinfo_A_2X2BIN_30FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1352000000,                  /* mipi_datarate = OPSYCK */
	962000000,                   /* pclk = VTPXCK of Clock Information */
	3210,                        /* frame_length_lines */
	9984,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_gc607_companion_pllinfo_A_4X4BIN_94FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1352000000,                  /* mipi_datarate = OPSYCK */
	641330000,                   /* pclk = VTPXCK of Clock Information */
	1612,                        /* frame_length_lines */
	4224,                        /* line_length_pck */
};


const struct sensor_pll_info_compact sensor_gc607_companion_pllinfo_A_4X4BIN_120FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	1352000000,                  /* mipi_datarate = OPSYCK */
	641330000,                   /* pclk = VTPXCK of Clock Information */
	1264,                        /* frame_length_lines */
	4224,                        /* line_length_pck */
};

const struct sensor_pll_info_compact sensor_gc607_companion_pllinfo_A_4X4BIN_240FPS = {
	EXT_CLK_Mhz * 1000 * 1000,   /* ext_clk */
	2054000000,                  /* mipi_datarate = OPSYCK */
	647770000,                   /* pclk = VTPXCK of Clock Information */
	1272,                        /* frame_length_lines */
	2112,                        /* line_length_pck */
};
#endif

static const u32 *sensor_gc607_companion_setfiles_A[] = {
	sensor_gc607_companion_setfile_A_REMOSAIC_FULL_8000x6000_10FPS,
	sensor_gc607_companion_setfile_A_2X2BIN_FULL_4000x3000_30FPS,
	sensor_gc607_companion_setfile_A_2X2BIN_CROP_4000x2256_30FPS,
	sensor_gc607_companion_setfile_A_2X2BIN_CROP_4000x1844_30FPS,
	sensor_gc607_companion_setfile_A_2X2BIN_CROP_3680x3000_30FPS,
	sensor_gc607_companion_setfile_A_2X2BIN_CROP_3000x3000_30FPS,
	sensor_gc607_companion_setfile_A_4X4BIN_FULL_2000x1500_94FPS,
	sensor_gc607_companion_setfile_A_4X4BIN_CROP_2000x1128_120FPS,
	sensor_gc607_companion_setfile_A_4X4BIN_CROP_1920x1080_240FPS,
};

static const u32 sensor_gc607_companion_setfile_A_sizes[] = {
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_REMOSAIC_FULL_8000x6000_10FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_2X2BIN_FULL_4000x3000_30FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_2X2BIN_CROP_4000x2256_30FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_2X2BIN_CROP_4000x1844_30FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_2X2BIN_CROP_3680x3000_30FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_2X2BIN_CROP_3000x3000_30FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_4X4BIN_FULL_2000x1500_94FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_4X4BIN_CROP_2000x1128_120FPS),
	ARRAY_SIZE(sensor_gc607_companion_setfile_A_4X4BIN_CROP_1920x1080_240FPS),
};
#if 0
static const struct sensor_pll_info_compact *sensor_gc607_companion_pllinfos_B[] = {
	&sensor_gc607_companion_pllinfo_A_REMOSAIC_FULL_10FPS,
	&sensor_gc607_companion_pllinfo_A_2X2BIN_30FPS,
	&sensor_gc607_companion_pllinfo_A_2X2BIN_30FPS,
	&sensor_gc607_companion_pllinfo_A_2X2BIN_30FPS,
	&sensor_gc607_companion_pllinfo_A_2X2BIN_30FPS,
	&sensor_gc607_companion_pllinfo_A_2X2BIN_30FPS,
	&sensor_gc607_companion_pllinfo_A_4X4BIN_94FPS,
	&sensor_gc607_companion_pllinfo_A_4X4BIN_120FPS,
	&sensor_gc607_companion_pllinfo_A_4X4BIN_240FPS,
};
#endif

#endif
